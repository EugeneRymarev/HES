@using HES.Core.Enums
@using HES.Web.Components

@if (Groups == null)
{
    <LoadingSpinner />
}
else
{
    <div class="d-flex justify-content-between align-items-center mb-2">
        <h1 class="text-navyblue">Groups</h1>
        <div>
            <button type="button" class="btn btn-primary" @onclick="OpenModalGreateGroup">
                Create group
            </button>
        </div>
    </div>
    <div class="d-flex justify-content-end align-items-center mb-3">
        <button class="btn btn-light p-1" title="Edit Group" @onclick="OpenModalEditGroup" disabled="@(string.IsNullOrWhiteSpace(CurrentGroupId) ? true : false)">
            <img style="width:32px;height:32px;" src="/svg/action/edit.svg" />
        </button>
        <button class="btn btn-light p-1" title="Delete Group" @onclick="OpenModalDeleteGroup" disabled="@(string.IsNullOrWhiteSpace(CurrentGroupId) ? true : false)">
            <img style="width:32px;height:32px;" src="/svg/action/delete.svg" />
        </button>
        <div class="form-group has-search-right mb-0 ml-3">
            <div class="form-control-feedback">
                <img class="img-size" src="/svg/action/search.svg" />
            </div>
            <input @oninput="@(async (e) => await FilterRecordsAsync(e))" type="text" class="form-control" placeholder="Search">
        </div>
    </div>
    <div class="table-responsive">
        <table id="groups" class="table table-hover border rounded w-100">
            <thead style="user-select: none; ">
                <tr>
                    <th @onclick="@(() => SortTable("Name"))">
                        Name
                        <img class="sort-arrow @SetSortIcon("Name")" />
                    </th>
                    <th @onclick="@(() => SortTable("Email"))">
                        Email
                        <img class="sort-arrow @SetSortIcon("Email")" />
                    </th>
                    <th @onclick="@(() => SortTable("Description"))">
                        Description
                        <img class="sort-arrow @SetSortIcon("Description")" />
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Groups)
                {
                    <tr @onclick="(() => RowSelected(item.Id))" class="table-row @(CurrentGroupId == item.Id ? "selected-row" : string.Empty)">
                        <td>
                            @item.Name
                        </td>
                        <td>
                            @item.Email
                        </td>
                        <td>
                            @item.Description
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="d-flex justify-content-between user-select-none">
        <div class="d-flex">
            <label class="col-form-label mr-2">Show entries</label>
            <div>
                <select @onchange="ShowEntriesOnChange" class="form-control">
                    <option selected value="10">10</option>
                    <option value="25">25</option>
                    <option value="50">50</option>
                    <option value="100">100</option>
                </select>
            </div>
        </div>
        <div class="d-flex">
            <label class="col-form-label"> Showing @(CurrentPage == 1 ? CurrentPage : CurrentPage * PageSize - PageSize + 1) to @(CurrentPage == TotalPages ? TotalRecords : CurrentPage * PageSize) of @TotalRecords entries </label>
        </div>
        <div class="c-pointer">
            <ul class="pagination">
                <li class="page-item @(CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" @onclick=@(async ()=>await NavigateToPage(PagerDirection.Previous))>Previous</a>
                </li>
                @for (int i = StartPage; i <= EndPage; i++)
                {
                    var currentPage = i;
                    <li class="page-item pagebutton @(currentPage==CurrentPage?"active":"")">
                        <a class="page-link" @onclick=@(async () =>await RefreshRecords(currentPage))>
                            @currentPage
                        </a>
                    </li>
                }
                <li class="page-item @(CurrentPage == TotalPages ? "disabled" : "")">
                    <a class="page-link" @onclick=@(async ()=>await NavigateToPage(PagerDirection.Next))>Next</a>
                </li>
            </ul>
        </div>
    </div>
}