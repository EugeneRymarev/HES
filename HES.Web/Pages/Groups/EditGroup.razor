@if (Group == null)
{
    <LoadingText />
}
else
{
    if (EntityBeingEdited)
    {
        <EditedByAnother EntityName="group" CloseAction="ModalDialogService.CancelAsync" />
    }
    else
    {
        <EditForm Model="@Group" OnValidSubmit="EditAsync">
            <DataAnnotationsValidator />
            <ValidationErrorMessage @ref="ValidationErrorMessage" />
            <div class="form-group">
                <label class="control-label text-gray">Name</label>
                <InputText @bind-Value="Group.Name" class="form-control text-navyblue" />
                <ValidationMessage For="@(() => Group.Name)" class="text-danger" />
            </div>
            <div class="form-group">
                <label class="control-label text-gray">Email</label>
                <InputText @bind-Value="Group.Email" class="form-control text-navyblue" />
                <ValidationMessage For="@(() => Group.Email)" class="text-danger" />
            </div>
            <div class="form-group">
                <label class="control-label text-gray">Description</label>
                <InputTextArea @bind-Value="Group.Description" class="form-control text-navyblue" rows="3" />
                <ValidationMessage For="@(() => Group.Description)" class="text-danger" />
            </div>
            <div class="form-group text-right mb-0">
                <button type="button" class="btn btn-secondary" @onclick="@(async () => await ModalDialogService.CancelAsync())">Cancel</button>
                <ButtonSpinner @ref="ButtonSpinner" Submit="true" Text="Save" Class="btn btn-primary" />
            </div>
        </EditForm>
    }
}