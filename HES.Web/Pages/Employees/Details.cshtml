@page
@model HES.Web.Pages.Employees.DetailsModel

@{
    ViewData["Title"] = "Details";
    ViewData["ActivePage"] = MenuNavPages.Employees;
}

<partial name="_ErrorMessage" for="ErrorMessage" />

@* Employee items *@
<div class="row align-items-center mb-2">
    <div class="col-auto p-1">
        <h1 class="text-navyblue m-0">@Model.Employee.FullName</h1>
    </div>
    <div class="col-auto p-1">
        <div class="dropdown no-arrow">
            <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <img src="~/svg/action/more.svg" />
            </a>
            <div class="dropdown-menu dropdown-menu-left shadow" aria-labelledby="dropdownMenuLink">
                <a class="dropdown-item open-modal-dialog" data-id="@Model.Employee.Id" data-action="EditEmployee" data-title="Edit employee">
                    <img src="~/svg/action/edit.svg" />
                    Edit
                </a>
            </div>
        </div>
    </div>
    <div class="col"></div>
    <div class="col-auto p-1">
        <button type="button" class="btn btn-primary open-modal-dialog" data-id="@Model.Employee.Id" data-action="AddDevice" data-title="Add device">
            Add device
        </button>
    </div>
    <div class="col-auto p-1">
        <button id="personal_acc" type="button" class="btn btn-primary open-modal-dialog" data-id="@Model.Employee.Id" data-action="CreatePersonalAccount" data-title="Create personal account" data-type="Account">
            Create personal account
        </button>
    </div>

    <div class="col-auto p-1">
        <button id="shared_acc" type="button" class="btn btn-primary open-modal-dialog" data-id="@Model.Employee.Id" data-action="AddSharedAccount" data-title="Add shared account" data-type="Account">
            Add shared account
        </button>
    </div>
</div>

@* Employee table *@
<div class="table-responsive">
    <table class="table border rounded">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Employee.FullName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Employee.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Employee.PhoneNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Employee.Department.Company)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Employee.Department)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Employee.Position)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Employee.LastSeen)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Employee.Devices)
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    @Html.DisplayFor(model => model.Employee.FullName)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Employee.Email)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Employee.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Employee.Department.Company.Name)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Employee.Department.Name)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Employee.Position.Name)
                </td>
                <td>
                    @if (Model.Employee.LastSeen != null)
                    {
                        @TimeZoneInfo.ConvertTimeFromUtc((DateTime)Model.Employee.LastSeen, TimeZoneInfo.Local)
                    }
                    else
                    {
                        <span>-</span>
                    }
                </td>
                <td>
                    @Html.DisplayFor(model => model.Employee.Devices.Count)
                </td>
            </tr>
        </tbody>
    </table>
</div>

@* Devices tables *@
@foreach (var device in Model.Employee.Devices)
{
    <div class="row align-items-center m-1">
        <div class="col-auto p-1">
            <h3 class="text-navyblue m-0">@device.Id</h3>
        </div>
        <div class="col-auto p-1">
            <div class="dropdown no-arrow">
                <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <img src="~/svg/action/more.svg" />
                </a>
                <div class="dropdown-menu dropdown-menu-left shadow" aria-labelledby="dropdownMenuLink">
                    <a class="dropdown-item open-modal-dialog" data-id="@device.Id" data-action="DeleteDevice" data-title="Delete device">
                        <img src="~/svg/action/delete.svg" />
                        Delete
                    </a>
                </div>
            </div>
        </div>
        <div class="col"></div>
    </div>
    <div class="row m-1">
        <div class="table-responsive">
            <table class="table border rounded" style="width:100%">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => device.Id)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => device.MAC)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => device.Model)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => device.RFID)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => device.Battery)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => device.Firmware)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => device.LastSynced)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => device.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => device.MAC)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => device.Model)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => device.RFID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => device.Battery)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => device.Firmware)
                        </td>
                        <td>
                            @if (device.LastSynced != null)
                            {
                                @TimeZoneInfo.ConvertTimeFromUtc((DateTime)device.LastSynced, TimeZoneInfo.Local)
                            }
                            else
                            {
                                <span>-</span>
                            }
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    @if (Model.DeviceAccounts.Where(e => e.EmployeeId == Model.Employee.Id).Where(d => d.DeviceId == device.Id).Count() > 0)
    {
        @*DeviceAccounts title*@
        <div class="row align-items-center m-1">
            <div class="col-auto p-1">
                <h4 class="text-navyblue m-0">Accounts</h4>
            </div>
            <div class="col"></div>
            <div class="col-auto p-1">
                <div class="form-group m-0 has-search">
                    <img class="form-control-feedback" src="~/svg/action/search.svg" />
                    <input id="searchbox_@device.Id" type="text" class="form-control" placeholder="Search">
                </div>
            </div>
        </div>
        @*DeviceAccounts table*@
        <div class="table-responsive1 overflow-auto">
            <table id="@device.Id" class="table display table table-hover border rounded">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.DeviceAccounts[0].Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DeviceAccounts[0].Urls)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DeviceAccounts[0].Apps)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DeviceAccounts[0].Login)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DeviceAccounts[0].Type)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DeviceAccounts[0].Status)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DeviceAccounts[0].LastSyncedAt)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DeviceAccounts[0].CreatedAt)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DeviceAccounts[0].UpdatedAt)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DeviceAccounts[0].PasswordUpdatedAt)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DeviceAccounts[0].OtpUpdatedAt)
                        </th>
                        <th class="table-col-menu"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.DeviceAccounts.Where(e => e.EmployeeId == Model.Employee.Id).Where(d => d.DeviceId == device.Id))
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td style="white-space: normal">
                                @{
                                    if (item.Urls != null)
                                    {
                                        foreach (var urls in item.Urls.Split(';'))
                                        {
                                            <span class="badge badge-primary custom-badge">@urls</span>
                                        }
                                    }
                                }
                            </td>
                            <td style="white-space: normal">
                                @{
                                    if (item.Apps != null)
                                    {
                                        foreach (var apps in item.Apps.Split(';'))
                                        {
                                            <span class="badge badge-primary custom-badge">@apps</span>
                                        }
                                    }
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Login)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Type)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                @if (item.LastSyncedAt != null)
                                {
                                    @TimeZoneInfo.ConvertTimeFromUtc((DateTime)item.LastSyncedAt, TimeZoneInfo.Local)
                                }
                                else
                                {
                                    <span>-</span>
                                }
                            </td>
                            <td>
                                @if (item.CreatedAt != null)
                                {
                                    @TimeZoneInfo.ConvertTimeFromUtc((DateTime)item.CreatedAt, TimeZoneInfo.Local)
                                }
                                else
                                {
                                    <span>-</span>
                                }
                            </td>
                            <td>
                                @if (item.UpdatedAt != null)
                                {
                                    @TimeZoneInfo.ConvertTimeFromUtc((DateTime)item.UpdatedAt, TimeZoneInfo.Local)
                                }
                                else
                                {
                                    <span>-</span>
                                }
                            </td>
                            <td>
                                @{
                                    var pwd = (DateTime.UtcNow.Date - item.PasswordUpdatedAt.Date).TotalDays;
                                    if (pwd == 1)
                                    {
                                        var text = $"{pwd} day";
                                        @text
                                    }
                                    else
                                    {
                                        var text = $"{pwd} days";
                                        @text
                                    }
                                }
                            </td>
                            <td>
                                @{
                                    if (item.OtpUpdatedAt != null)
                                    {
                                        var otp = (DateTime.UtcNow.Date - item.OtpUpdatedAt?.Date)?.TotalDays;
                                        if (otp == 1)
                                        {
                                            var text = $"{otp} day";
                                            @text
                                        }
                                        else
                                        {
                                            var text = $"{otp} days";
                                            @text
                                        }
                                    }
                                    else
                                    {
                                        <span>-</span>
                                    }
                                }
                            </td>
                            <td>
                                <div class="dropdown no-arrow">
                                    <a class="dropdown-toggle" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <img src="~/svg/action/more.svg" />
                                    </a>
                                    <div class="dropdown-menu dropdown-menu-right shadow" aria-labelledby="dropdownMenuLink">
                                        @if (item.Type == Core.Entities.AccountType.Personal)
                                        {
                                            <a class="dropdown-item open-modal-dialog" data-id="@item.Id" data-action="EditPersonalAccount" data-title="Edit personal account">
                                                <img src="~/svg/action/edit.svg" />
                                                Edit
                                            </a>
                                            <a class="dropdown-item open-modal-dialog" data-id="@item.Id" data-action="EditPersonalAccountPwd" data-title="Edit personal account password">
                                                <img src="~/svg/action/password.svg" />
                                                Edit password
                                            </a>
                                            <a class="dropdown-item open-modal-dialog" data-id="@item.Id" data-action="EditPersonalAccountOtp" data-title="Edit personal account OTP">
                                                <img src="~/svg/action/otp.svg" />
                                                Edit OTP
                                            </a>
                                        }
                                        <a class="dropdown-item open-modal-dialog" data-id="@item.Id" data-action="DeleteAccount" data-title="Delete account">
                                            <img src="~/svg/action/delete.svg" />
                                            Delete
                                        </a>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="row mt-2">
            <div class="col-sm-12 col-md-auto d-flex justify-content-start align-items-center mb-1">
                <span class="d-flex align-items-center mr-1 text-navyblue">Show entries</span>
                <div id="entries_place_@device.Id"></div>
            </div>
            <div id="showing_place_@device.Id" class="col-sm-12 col-md d-flex justify-content-md-center align-items-center mb-1 text-navyblue"></div>
            <div id="pagination_place_@device.Id" class="col-sm-12 col-md-auto d-flex justify-content-md-end align-items-center mb-1"></div>
        </div>
    }
}

@* Modal *@
<div class="modal" id="modalDialog" tabindex="-1" role="dialog" aria-labelledby="modalDialogTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-navyblue" id="modalDialogTitle">Dialog</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div id="modalBody" class="modal-body">
                <div class="d-flex justify-content-center align-items-center">
                    <div class="spinner-grow text-primary" style="width: 3rem; height: 3rem;" role="status">
                        <span class="sr-only"></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        // Open modal dialog
        $(document).on('click', '.open-modal-dialog', function () {
            var btn = $(this);
            var id = btn.data("id");
            var action = btn.data("action");
            var title = btn.data("title");
            var type = btn.data("type");

            if (type == "Account") {
                $('.modal-dialog').addClass('modal-lg');
            }
            else {
                $('.modal-dialog').removeClass('modal-lg');
            }

            $('#modalDialogTitle').html(title);
            $('#modalDialog').modal('toggle');

            $.ajax({
                url: "/Employees/Details?handler=" + action,
                type: "Get",
                data: { id: id },
                async: true,
                success: function (response) {
                    $("#modalBody").html(response);

                    InitDevicesTable();

                    // Enable tags
                    $('[data-role="tags-input"]').tagsInput();

                    // Set tooltip
                    $('.tags-container').attr('data-toggle', "tooltip");
                    $('.tags-container').attr('data-placement', "bottom");
                    $('.tags-container').attr('title', "Input value and press enter");

                    // Enable tooltip
                    $('[data-toggle="tooltip"]').tooltip();

                    // Validation partial view
                    $('form').removeData('validator');
                    $('form').removeData('unobtrusiveValidation');
                    $.validator.unobtrusive.parse('form');
                }
            });
        });

        // On submit clear search results
        $(document).on('submit', 'form', function () {
            var table = $('#devices').DataTable();
            table.search('').columns().search('').draw();
        });

        // Init devices
        function InitDevicesTable() {
            var table_name = '#devices';
            $(table_name).DataTable({
                "order": [[1, "asc"]],
                "columnDefs": [
                    { "orderable": false, "targets": 0 }
                ],
                "lengthMenu": [[5], [5]],
                "scrollY": "246px",
                "paging": false,
                "bInfo": false,
                "bLengthChange": false,
            });
            var dataTable = $(table_name).dataTable();
            // Search box
            $('#devices_searchbox').keyup(function () {
                dataTable.fnFilter(this.value);
            });
            $('.dataTables_filter').addClass('d-none');
        }

        // Check all
        function checkAll(e) {
            var checkboxes = document.getElementsByTagName('input');
            if (e.checked) {
                for (var i = 0; i < checkboxes.length; i++) {
                    if (checkboxes[i].type == 'checkbox') {
                        checkboxes[i].checked = true;
                    }
                }
            } else {
                for (var i = 0; i < checkboxes.length; i++) {
                    console.log(i)
                    if (checkboxes[i].type == 'checkbox') {
                        checkboxes[i].checked = false;
                    }
                }
            }
        }

        // Dropdown SharedAccount
        function GetSharedAccount(id) {
            $.getJSON('/Employees/Details?handler=JsonSharedAccount', { id: id },
                function (data) {
                    $('#SharedAccountName').val(data.name);
                    $('#SharedAccountUrls').val(data.urls);
                    $('#SharedAccountApps').val(data.apps);
                    $('#SharedAccountLogin').val(data.login);
                    $('#SharedAccountOtp').val(data.otpSecret);
                });
        }

        // Dropdown Template
        function GetTemplate(id) {
            $.getJSON('/Employees/Details?handler=JsonTemplate', { id: id },
                function (data) {
                    $('#PersonalAccName').val(data.name);
                    $('#PersonalAccUrls').val(data.urls);
                    $('#PersonalAccApps').val(data.apps);
                });
        }

        // Set DataTables
        $("table").each(function () {
            var currentTable = $(this);
            var currentId = currentTable.attr('id');

            if (currentId != 'undefined') {
                $('#' + currentId).DataTable({
                    "columnDefs": [
                        { "orderable": false, "targets": 10 }
                    ]
                });
                var dataTable = $('#' + currentId).dataTable();
                // Search box
                $('#searchbox_' + currentId).keyup(function () {
                    dataTable.fnFilter(this.value);
                });
                $('.dataTables_filter').addClass('d-none');
                // Length
                $('#entries_place_' + currentId).html($('.dataTables_length select').removeClass('custom-select-sm form-control-sm'));
                $('.dataTables_length').addClass('d-none');
                // Info
                $('#showing_place_' + currentId).html($('#' + currentId + '_info'));
                // Paginate
                $('#pagination_place_' + currentId).html($('#' + currentId + '_paginate'));
            }
        });

        // Clear content on modal hide
        $('#modalDialog').on('hidden.bs.modal', function (e) {
            $("#modalBody").html("<div class='d-flex justify-content-center align-items-center'><div class='spinner-grow text-primary' style='width: 3rem; height: 3rem;' role='status'><span class='sr-only'></span></div></div>");
        })

        // Set btn disable if device count 0
        $(document).ready(function () {
            if (@Model.Employee.Devices.Count() == 0) {
                $('#personal_acc').attr("disabled", true);
                $('#shared_acc').attr("disabled", true);
            }
            $('.toast').toast('show');
        });

    </script>
    <partial name="_ValidationScriptsPartial" />
}
