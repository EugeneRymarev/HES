@if (Employee == null)
{
    <LoadingText />
}
else
{
    @if (Employee.SoftwareVaultInvitations.Count > 0 || Employee.SoftwareVaults.Count > 0 || Employee.Devices.Count > 0)
    {
        <h4 class="text-navyblue">Vaults</h4>
    }
    <ul class="list-group w-100 mb-3">
        @foreach (var invitation in Employee.SoftwareVaultInvitations.Where(x => x.Status != SoftwareVaultInvitationStatus.Accepted))
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center">
                    <img class="mr-1" src="/svg/icon-mail-sent.svg" />
                    Software Vault Invite sent @invitation.CreatedAt.ToShortDateString() - @invitation.Status
                </div>
                <div>
                    <button type="button" class="btn btn-light border my-1 mr-2" title="Resend invitation" @onclick="@(() => OpenDialogResendInvitationAsync(invitation))">
                        <img class="icon-btn" src="/svg/action-email.svg" />
                        Resend
                    </button>
                    <button type="button" class="btn btn-light border my-1 mr-2" title="Delete invitation" @onclick="@(() => OpenDialogDeleteInvitationAsync(invitation))">
                        <img class="icon-btn" src="/svg/action/delete.svg" />
                        Delete
                    </button>
                </div>
            </li>
        }
        @foreach (var softwareVault in Employee.SoftwareVaults)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center">
                    <img src="/svg/icon-software-vault.svg" />
                    <span class="font-weight-bold">@softwareVault.Model</span> - @(softwareVault.LicenseEndDate != null ? $"License till {softwareVault.LicenseEndDate.Value.ToShortDateString()}" : "License status None") - @softwareVault.Status
                </div>
                <div>
                    <button type="button" class="btn btn-light border my-1 mr-2" title="Software Vault Details" @onclick="@(() => OpenDialogSoftwareVaultDetailsAsync(softwareVault))">
                        <img class="icon-btn" src="/svg/action/details.svg" />
                        Details
                    </button>
                </div>
            </li>
        }
        @foreach (var hardwareVault in Employee.Devices)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center">
                    <img class="mr-1" src="/svg/icon-hardware-vault.svg" />
                    <span class="font-weight-bold">@hardwareVault.Id</span> - @(hardwareVault.LicenseEndDate != null ? $"License till {hardwareVault.LicenseEndDate.Value.ToShortDateString()}" : "License status None") - @hardwareVault.Status @(hardwareVault.IsOnline ? "- <span class='badge badge-success'>Online</span>": null)
                </div>
                <div>
                    <button type="button" class="btn btn-light border my-1 mr-2" title="Hardware Vault Details" @onclick="@(() => OpenDialogHardwareVaultDetailsAsync(hardwareVault))">
                        <img class="icon-btn" src="/svg/action/details.svg" />
                        Details
                    </button>
                    <button type="button" class="btn btn-light border my-1 mr-2" title="Delete device">
                        <img class="icon-btn" src="/svg/action/delete.svg" />
                        Delete
                    </button>
                </div>
            </li>
        }
    </ul>
}