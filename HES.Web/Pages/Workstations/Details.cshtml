@page
@model HES.Web.Pages.Workstations.DetailsModel
@{
    ViewData["Title"] = "Details";
    ViewData["ActivePage"] = MenuNavPages.Workstations;
}

<partial name="_SuccessMessage" for="SuccessMessage" />
<partial name="_ErrorMessage" for="ErrorMessage" />

@* Workstation items *@
<div class="row align-items-center details-card">
    <div class="col-auto">
        <h1 class="text-navyblue m-0">@Model.Workstation.Name</h1>
    </div>
    <div class="col"></div>
    <div class="col-auto">
        <button type="button" class="btn btn-primary open-modal-dialog" data-id="@Model.Workstation.Id" data-action="AddProximityDevice" data-title="Add proximity device">
            Add proximity device
        </button>
    </div>
</div>

@if (Model.ProximityDevices != null)
{
    @*Proximity Devices title*@
    <div class="row align-items-center m-1">
        <div class="col-auto p-1">
            <h4 class="text-navyblue m-0">Proximity unlock devices</h4>
        </div>
        <div class="col"></div>
        <div class="col-auto p-1">
            <div class="form-group has-search-right m-0">
                <div class="form-control-feedback">
                    <img class="img-size" src="~/svg/action/search.svg" />
                </div>
                <input id="searchbox" type="text" class="form-control" placeholder="Search">
            </div>
        </div>
    </div>
    @*Proximity Devices table*@
    <table id="proximityDevices" class="table display table table-hover border rounded w-100">
        <thead>
            <tr>
                <th class="d-none"></th>
                <th data-priority="1">
                    @Html.DisplayNameFor(model => model.ProximityDevices[0].HardwareVaultId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProximityDevices[0].HardwareVault.Employee)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProximityDevices[0].HardwareVault.Employee.EmpCompany)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProximityDevices[0].HardwareVault.Employee.EmpDepartment)
                </th>
                <th class="table-col-menu" data-priority="2"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ProximityDevices)
            {
                <tr>
                    <td class="d-none"></td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HardwareVaultId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HardwareVault.Employee.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HardwareVault.Employee.EmpCompany)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HardwareVault.Employee.EmpDepartment)
                    </td>
                    <td>
                        <div class="dropdown no-arrow">
                            <a class="dropdown-toggle" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <img src="~/svg/action/more.svg" />
                            </a>
                            <div class="dropdown-menu dropdown-menu-right shadow" aria-labelledby="dropdownMenuLink">
                                @*
                                     <a class="dropdown-item open-modal-dialog" data-id="@item.Id" data-action="EditProximitySettings" data-title="Edit proximity settings">
                                        <img src="~/svg/action/edit.svg" />
                                        Edit
                                    </a>
                                *@
                                <a class="dropdown-item open-modal-dialog" data-id="@item.Id" data-action="DeleteProximityDevice" data-title="Delete proximity device">
                                    <img src="~/svg/action/delete.svg" />
                                    Delete
                                </a>
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="row mt-2">
        <div class="col d-flex justify-content-center justify-content-lg-start align-items-center mb-1 text-nowrap">
            <span class="d-flex align-items-center mr-1 text-navyblue">Show entries</span>
            <div id="entries_place"></div>
        </div>
        <div id="showing_place" class="col d-flex justify-content-center align-items-center mb-1 text-navyblue text-nowrap"></div>
        <div id="pagination_place" class="col d-flex justify-content-center justify-content-lg-end align-items-center mb-1"></div>
    </div>
}

@* Modal *@
<div class="modal" id="modalDialog" tabindex="-1" role="dialog" aria-labelledby="modalDialogTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-navyblue" id="modalDialogTitle">Dialog</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div id="modalBody" class="modal-body">
                <div class="d-flex justify-content-center align-items-center">
                    <div class="spinner-grow text-primary" style="width: 3rem; height: 3rem;" role="status">
                        <span class="sr-only"></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        // Initialize proximity devices table
        var table_name = '#proximityDevices';
        $(table_name).DataTable({
            responsive: true,
            "order": [[1, "asc"]],
            "columnDefs": [
                { "orderable": false, "targets": [0,5]}
            ]
        });
        var dataTable = $(table_name).dataTable();
        // Search box
        $('#searchbox').keyup(function () {
            dataTable.fnFilter(this.value);
        });
        $('.dataTables_filter').addClass('d-none');
        // Length
        $('#entries_place').html($('.dataTables_length select').removeClass('custom-select-sm form-control-sm'));
        $('.dataTables_length').addClass('d-none');
        // Info
        $('#showing_place').html($('.dataTables_info'));
        // Paginate
        $('#pagination_place').html($('.dataTables_paginate'));

        // Open modal dialog
        $(document).on('click', '.open-modal-dialog', function () {
            var btn = $(this);
            var id = btn.data("id");
            var action = btn.data("action");
            var title = btn.data("title");

            $('#modalDialogTitle').html(title);
            $('#modalDialog').modal('toggle');

            $.ajax({
                url: "/Workstations/Details?handler=" + action,
                type: "Get",
                data: { id: id },
                async: true,
                success: function (response) {
                    $("#modalBody").html(response);
                }
            });
        });

        // Clear content on modal hide
        $('#modalDialog').on('hidden.bs.modal', function (e) {
            $("#modalBody").html("<div class='d-flex justify-content-center align-items-center'><div class='spinner-grow text-primary' style='width: 3rem; height: 3rem;' role='status'><span class='sr-only'></span></div></div>");
        })

         $(document).ready(function () {
            // Breadcrumb
            $('#breadcrumb').toggleClass('d-none');
            $('.breadcrumb').append('<li class="breadcrumb-item"><a href="/Workstations">Workstations</a></li>');
            $('.breadcrumb').append('<li class="breadcrumb-item active">@Model.Workstation.Name</li>');
        });
    </script>
}