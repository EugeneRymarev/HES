@if (HardwareVaults == null)
{
    <LoadingSpinner />
}
else
{
<TableAction>
    <button class="btn btn-primary" @onclick="SynchronizeDevicesAsync">
        <span id="syncBtnSpinner" class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
        <span>Import devices</span>
    </button>

    @if (SelectedHardwareVault != null)
    {
        <button type="button" @onclick="EditVaultRFIDAsync" class="btn btn-light border mx-2" title="Edit RFID">
            <img class="icon-btn" src="/svg/action/edit.svg" />
            Edit RFID
        </button>

        @if (SelectedHardwareVault.Status == VaultStatus.Locked)
        {
            <button type="button" @onclick="ActivateVaultAsync" class="btn btn-light border mx-2" title="Activate vault">
                <img class="icon-btn" src="/svg/action/unlock.svg" />
                Activate vault
            </button>
        }

        @if (SelectedHardwareVault.Status == VaultStatus.Active)
        {
            <button type="button" @onclick="SuspendVaultAsync" class="btn btn-light border mx-2" title="Suspend vault">
                <img class="icon-btn" src="/svg/action/otp.svg" />
                Suspend vault
            </button>

            <button type="button" @onclick="SetVaultProfileAsync" class="btn btn-light border mx-2" title="Set vault profile">
                <img class="icon-btn" src="/svg/action/done.svg" />
                Set vault profile
            </button>
        }


        @if (SelectedHardwareVault.Status == VaultStatus.Active || SelectedHardwareVault.Status == VaultStatus.Locked || SelectedHardwareVault.Status == VaultStatus.Suspended || SelectedHardwareVault.Status == VaultStatus.Reserved)
        {
            <button type="button" @onclick="CompromisedVaultAsync" class="btn btn-light border mx-2" title="Compromised">
                <img class="icon-btn" src="/svg/action/password.svg" />
                Vault Is Compromised
            </button>
        }

        @if (SelectedHardwareVault.Status == VaultStatus.Suspended || SelectedHardwareVault.Status == VaultStatus.Reserved)
        {
            <button type="button" @onclick="ShowActivationCodeAsync" class="btn btn-light border mx-2" title="Show activation code">
                <img class="icon-btn" src="/svg/action/details.svg" />
                Show activation code
            </button>
        }
    }
</TableAction>

    <TableFilter SearchTextChanged="SearchTextChangedAsync">
        <VaultFilter FilterChanged="FilteredAsync" />
    </TableFilter>

    <MainTable Items="HardwareVaults" SelectedItem="@SelectedHardwareVault" SelecedItemChanged="SelectedItemChangedAsync">
        <TableHeader>
            <MainTableHeader Title="@nameof(HardwareVault.Id)"
                             SortColumn="@nameof(HardwareVault.Id)"
                             CurrentSortedColumn="@SortedColumn"
                             SortedColumnChanged="SortedColumnChangedAsync"
                             SortDirectionChanged="SortDirectionChangedAsync" />
            <MainTableHeader Title="@nameof(HardwareVault.MAC)"
                             SortColumn="@nameof(HardwareVault.MAC)"
                             CurrentSortedColumn="@SortedColumn"
                             SortedColumnChanged="SortedColumnChangedAsync"
                             SortDirectionChanged="SortDirectionChangedAsync" />
            <MainTableHeader Title="@nameof(HardwareVault.Battery)"
                             SortColumn="@nameof(HardwareVault.Battery)"
                             CurrentSortedColumn="@SortedColumn"
                             SortedColumnChanged="SortedColumnChangedAsync"
                             SortDirectionChanged="SortDirectionChangedAsync" />
            <MainTableHeader Title="@nameof(HardwareVault.Firmware)"
                             SortColumn="@nameof(HardwareVault.Firmware)"
                             CurrentSortedColumn="@SortedColumn"
                             SortedColumnChanged="SortedColumnChangedAsync"
                             SortDirectionChanged="SortDirectionChangedAsync" />
            <MainTableHeader Title="Profile"
                             SortColumn="@nameof(HardwareVault.HardwareVaultProfile.Name)"
                             CurrentSortedColumn="@SortedColumn"
                             SortedColumnChanged="SortedColumnChangedAsync"
                             SortDirectionChanged="SortDirectionChangedAsync" />
            <MainTableHeader Title="@nameof(HardwareVault.Status)"
                             SortColumn="@nameof(HardwareVault.Status)"
                             CurrentSortedColumn="@SortedColumn"
                             SortedColumnChanged="SortedColumnChangedAsync"
                             SortDirectionChanged="SortDirectionChangedAsync" />
            <MainTableHeader Title="Last Synced"
                             SortColumn="@nameof(HardwareVault.LastSynced)"
                             CurrentSortedColumn="@SortedColumn"
                             SortedColumnChanged="SortedColumnChangedAsync"
                             SortDirectionChanged="SortDirectionChangedAsync" />
            <MainTableHeader Title="License Status"
                             SortColumn="@nameof(HardwareVault.LicenseStatus)"
                             CurrentSortedColumn="@SortedColumn"
                             SortedColumnChanged="SortedColumnChangedAsync"
                             SortDirectionChanged="SortDirectionChangedAsync" />
            <MainTableHeader Title="License End Date"
                             SortColumn="@nameof(HardwareVault.LicenseEndDate)"
                             CurrentSortedColumn="@SortedColumn"
                             SortedColumnChanged="SortedColumnChangedAsync"
                             SortDirectionChanged="SortDirectionChangedAsync" />
            <MainTableHeader Title="@nameof(HardwareVault.Employee)"
                             SortColumn="@nameof(HardwareVault.Employee.FullName)"
                             CurrentSortedColumn="@SortedColumn"
                             SortedColumnChanged="SortedColumnChangedAsync"
                             SortDirectionChanged="SortDirectionChangedAsync" />
            <MainTableHeader Title="Company"
                             SortColumn="@nameof(HardwareVault.Employee.EmpCompany)"
                             CurrentSortedColumn="@SortedColumn"
                             SortedColumnChanged="SortedColumnChangedAsync"
                             SortDirectionChanged="SortDirectionChangedAsync" />
            <MainTableHeader Title="@nameof(HardwareVault.Model)"
                             SortColumn="@nameof(HardwareVault.Model)"
                             CurrentSortedColumn="@SortedColumn"
                             SortedColumnChanged="SortedColumnChangedAsync"
                             SortDirectionChanged="SortDirectionChangedAsync" />
            <MainTableHeader Title="Department"
                             SortColumn="@nameof(HardwareVault.Employee.Department)"
                             CurrentSortedColumn="@SortedColumn"
                             SortedColumnChanged="SortedColumnChangedAsync"
                             SortDirectionChanged="SortDirectionChangedAsync" />
            <MainTableHeader Title="@nameof(HardwareVault.RFID)"
                             SortColumn="@nameof(HardwareVault.RFID)"
                             CurrentSortedColumn="@SortedColumn"
                             SortedColumnChanged="SortedColumnChangedAsync"
                             SortDirectionChanged="SortDirectionChangedAsync" />
        </TableHeader>
        <TableRow>
            <td>
                @if (context.IsOnline)
                    {
                    <span title="Conected device" class="state-connected">@context.Id</span>
                    }
                    else
                    {
                    @context.Id
                    }
            </td>
            <td>
                @context.MAC
            </td>
            <td>
                @if (context.Battery >= 30)
                    {
                    <img src="/svg/device/battery_full.svg" alt="@context.Battery" />
                    <span>@context.Battery%</span>
                    }
                    else if (context.Battery >= 15 && context.Battery <= 30)
                    {
                    <img src="/svg/device/battery_30.svg" alt="@context.Battery" />
                    <span>@context.Battery%</span>
                    }
                    else
                    {
                    <img src="/svg/device/battery_15.svg" alt="@context.Battery" />
                    <span>@context.Battery%</span>
                    }
            </td>
            <td>
                @context.Firmware
            </td>
            <td>
                @context.HardwareVaultProfile.Name
            </td>
            <td>
                @context.Status
            </td>
            <td>
                @if (context.LastSynced != null)
                    {
                    @context.LastSynced.Value.ToLocalTime()
                    }
            </td>
            <td>
                @context.LicenseStatus
            </td>
            <td>
                @if (context.LicenseEndDate != null)
                    {
                    @context.LicenseEndDate.Value.ToShortDateString()
                    }
            </td>
            <td>
                @context.Employee?.FullName
            </td>
            <td>
                @context.Employee?.EmpCompany
            </td>
            <td>
                @context.Model
            </td>
            <td>
                @context.Employee?.Department?.Name
            </td>
            <td>
                @context.RFID
            </td>
        </TableRow>
    </MainTable>
    <Pagination CurrentPageChanged="CurrentPageChangedAsync"
                DisplayRowsChanged="DisplayRowsChangedAsync"
                TotalRecords="TotalRecords"
                CurrentPage="CurrentPage"
                DisplayRows="DisplayRows"
                DisplayRecords="HardwareVaults.Count" />
}
